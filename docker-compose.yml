version: "3.9"

services:
  # ========== DATABASE SERVICES ==========
  # User Database
  db-user:
    image: postgres:14-alpine
    container_name: user_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${USER_DB}
    ports:
      - "5433:5432"
    volumes:
      - user_data:/var/lib/postgresql/data
    networks:
      - ev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${USER_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Listing Database
  db-listing:
    image: postgres:14-alpine
    container_name: listing_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${LISTING_DB}
    ports:
      - "5434:5432"
    volumes:
      - listing_data:/var/lib/postgresql/data
    networks:
      - ev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${LISTING_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Auction Database
  db-auction:
    image: postgres:14-alpine
    container_name: auction_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${AUCTION_DB}
    ports:
      - "5435:5432"
    volumes:
      - auction_data:/var/lib/postgresql/data
    networks:
      - ev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${AUCTION_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-transaction:
    image: postgres:14-alpine
    container_name: transaction_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${TRANSACTION_DB}
    ports:
      - "5436:5432"
    volumes:
      - transaction_data:/var/lib/postgresql/data
    networks:
      - ev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${TRANSACTION_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ========== REDIS CACHE ==========
  redis:
    image: redis:alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - ev_network

  # ========== USER SERVICE ==========
  user-service:
    build: ./services/user-service
    container_name: user_service
    command: gunicorn --bind 0.0.0.0:5000 "app:create_app()"
    volumes:
      - ./services/user-service:/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-user:5432/${USER_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_URL=redis://redis:6379
    ports:
      - "5000:5000"
    depends_on:
      db-user:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - ev_network

  # ========== LISTING SERVICE ==========
  listing-service:
    build: ./services/listing-service
    container_name: listing_service
    command: gunicorn --bind 0.0.0.0:5001 "app:create_app()"
    volumes:
      - ./services/listing-service:/app
      - listing_uploads:/app/uploads
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-listing:5432/${LISTING_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - FLASK_ENV=development
    ports:
      - "5001:5001"
    depends_on:
      db-listing:
        condition: service_healthy
    networks:
      - ev_network

  # ========== AUCTION SERVICE ==========
  auction-service:
    build: ./services/auction-service
    container_name: auction_service
    command: gunicorn --bind 0.0.0.0:5002 "app:create_app()"
    volumes:
      - ./services/auction-service:/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-auction:5432/${AUCTION_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - FLASK_ENV=development
    ports:
      - "5002:5002"
    depends_on:
      db-auction:
        condition: service_healthy
    networks:
      - ev_network

  transaction-service:
    build: ./services/transaction-service
    container_name: transaction_service
    command: gunicorn --bind 0.0.0.0:5003 "app:create_app()"
    volumes:
      - ./services/transaction-service:/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-transaction:5432/${TRANSACTION_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - FLASK_ENV=development
    ports:
      - "5003:5003"
    depends_on:
      db-transaction:
        condition: service_healthy
    networks:
      - ev_network
  # ========== API GATEWAY (NGINX) ==========
  api-gateway:
    build: ./api-gateway
    container_name: api_gateway
    ports:
      - "80:80"
    volumes:
      - listing_uploads:/usr/share/nginx/html/uploads:ro
    depends_on:
      - user-service
      - listing-service
      - auction-service
      - transaction-service
    networks:
      - ev_network

  # ========== FRONTEND ==========
  frontend:
    build: ./frontend
    container_name: frontend_server
    ports:
      - "8080:80"
    networks:
      - ev_network

# ========== NETWORKS ==========
networks:
  ev_network:
    driver: bridge

# ========== VOLUMES ==========
volumes:
  user_data:
  listing_data:
  auction_data:
  transaction_data:
  listing_uploads:
